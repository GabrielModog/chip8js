var X=512;var M=80;var E=64;var h=32;var U=60;var z=[240,144,144,144,240,32,96,32,32,112,240,16,240,128,240,240,16,240,16,240,144,144,240,16,16,240,128,240,16,240,240,128,240,144,240,240,16,32,64,64,240,144,240,144,240,240,144,240,16,240,240,144,240,144,144,224,144,224,144,224,240,128,128,128,240,224,144,144,144,224,240,128,240,128,240,240,128,240,128,128];var C={49:1,50:2,51:3,52:12,81:4,87:5,69:6,82:13,65:7,83:8,68:9,70:14,90:10,88:0,67:11,86:15};class J{constructor(x=10,F=10){this.canvas=document.getElementById("app");this.ctx=this.canvas.getContext("2d");this.scale=x;this.pixelSize=F;this.canvas.width=E*this.scale;this.canvas.height=h*this.scale}render(x){this.ctx.clearRect(0,0,this.canvas.width,this.canvas.height);for(let F=0;F<E;F++){for(let t=0;t<h;t++){const $=x[F+t*E];if($){this.ctx.fillStyle="#212f3d";this.ctx.fillRect(F*this.scale,t*this.scale,this.pixelSize,this.pixelSize)}}}}}class Y{keysPressed;nextKeyCallback;constructor(x){this.keysMap=x;this.keysPressed={};this.nextKeyCallback=null;this.init()}init(){window.addEventListener("keydown",this.onKeyDown.bind(this),false);window.addEventListener("keyup",this.onKeyRelease.bind(this),false)}}Y.prototype.isKeyPressed=function(x){return this.keysPressed[x]};Y.prototype.onKeyDown=function(x){const F=x?.keyCode;const t=this.keysMap[F];if(!t)return;this.keysPressed[t]=true;if(this.nextKeyCallback&&t){this.nextKeyCallback(t);this.nextKeyCallback=null}};Y.prototype.onKeyRelease=function(x){const F=x?.keyCode;const t=this.keysMap[F];this.keysPressed[t]=false};class m{audioContext;gain;destination;constructor(){this.audioContext=new window.AudioContext;this.gain=this.audioContext.createGain();this.destination=this.audioContext.destination;this.gain.connect(this.destination)}}m.prototype.play=function(){if(this.audioContext&&!this.oscillator){this.oscillator=this.audioContext.createOscillator();this.oscillator.frequency.setValueAtTime(440,this.audioContext.currentTime);this.oscillator.type="square";this.oscillator.connect(this.gain);this.oscillator.start()}};m.prototype.stop=function(){if(this.oscillator){this.oscillator.stop();this.oscillator.disconnect();this.oscillator=null}};class P{constructor(x,F,t){this.memory=new Uint8Array(4096);this.registers=new Uint8Array(16);this.stack=new Array;this.pc=X;this.video=new Array(E*h);this.sp=0;this.i=0;this.delayTimer=0;this.soundTimer=0;this.paused=false;this.keyboard=x;this.sound=F;this.display=t}loadFontsetInMemory(){for(let x=0;x<z.length;x++){this.memory[M+x]=z[x]}}cycle(){if(!this.paused){let x=this.memory[this.pc]<<8|this.memory[this.pc+1];this.instructions(x);if(this.delayTimer>0){this.delayTimer-=1}if(this.soundTimer>0){this.soundTimer-=1}}if(this.soundTimer>0){this.sound.play()}else{this.sound.stop()}this.display.render(this.video)}increment_pc(){this.pc+=2}rand(){return Math.floor(Math.random()*255)}clearDisplay(){this.video=new Array(E*h)}instructions(x){this.increment_pc();const F=(x&3840)>>8;const t=(x&240)>>4;const $=128;const v=8;const K=this.registers[F];const G=this.registers[t];const f=x&15;switch(x&61440){case 0:{switch(x){case 224:{this.clearDisplay()}break;case 238:{this.pc=this.stack.pop()}break}}break;case 4096:{const L=x&4095;this.pc=L}break;case 8192:{const L=x&4095;this.stack.push(this.pc);this.pc=L}break;case 12288:{const L=x&255;if(this.registers[F]===L){this.increment_pc()}}break;case 16384:{const L=x&255;if(this.registers[F]!==L){this.increment_pc()}}break;case 20480:{if(this.registers[F]===this.registers[t]){this.increment_pc()}}break;case 24576:{const L=x&255;this.registers[F]=L}break;case 28672:{const L=x&255;this.registers[F]+=L}break;case 32768:{const L=x&15;switch(L){case 0:{this.registers[F]=this.registers[t]}break;case 1:{this.registers[F]|=this.registers[t]}break;case 2:{this.registers[F]&=this.registers[t]}break;case 3:{this.registers[F]^=this.registers[t]}break;case 4:{this.registers[15]=0;const B=this.registers[F]+this.registers[t];if(B>255){this.registers[15]=1}this.registers[F]=B}break;case 5:{this.registers[15]=0;if(this.registers[F]>this.registers[t]){this.registers[15]=1}this.registers[F]-=this.registers[t]}break;case 6:{this.registers[15]=this.registers[F]&1;this.registers[F]>>=1}break;case 7:{this.registers[15]=0;if(this.registers[t]>this.registers[F]){this.registers[15]=1}this.registers[F]=this.registers[t]-this.registers[F]}break;case 14:{this.registers[15]=(this.registers[F]&128)>>7;this.registers[F]<<=1}break}}break;case 36864:{if(this.registers[F]!==this.registers[t]){this.increment_pc()}}break;case 40960:{const L=x&4095;this.i=L}break;case 45056:{const L=x&4095;this.pc=this.registers[0]+L}break;case 49152:{const L=x&255;const B=this.rand();this.registers[F]=B&L}break;case 53248:{this.registers[15]=0;for(let L=0;L<f;L++){let B=this.memory[this.i+L];for(let Q=0;Q<v;Q++){if((B&$>>Q)!==0){const g=K+Q;const u=G+L;const A=g+u*E;if(this.video[A]===1){this.registers[15]=1}this.video[A]^=1}}}}break;case 57344:{const L=x&255;switch(L){case 158:{if(this.keyboard.isKeyPressed(this.registers[F])){this.increment_pc()}}break;case 161:{if(!this.keyboard.isKeyPressed(this.registers[F])){this.increment_pc()}}break}}break;case 61440:{const L=x&255;switch(L){case 7:{this.registers[F]=this.delayTimer}break;case 10:{this.paused=true;this.keyboard.nextKeyCallback=(B)=>{this.registers[F]=B;this.paused=false}}break;case 21:{this.delayTimer=this.registers[F]}break;case 24:{this.soundTimer=this.registers[F]}break;case 30:{this.i+=this.registers[F]}break;case 41:{this.i=this.registers[F]*5}break;case 51:{let B=this.registers[F];this.memory[this.i]=Math.floor(B/100);this.memory[this.i+1]=Math.floor(B%100/10);this.memory[this.i+2]=Math.floor(B%10)}break;case 85:{for(let B=0;B<=F;B++){this.memory[this.i+B]=this.registers[B]}}break;case 101:{for(let B=0;B<=F;B++){this.registers[B]=this.memory[this.i+B]}}break}}break}}}class Z{cpu;constructor(x,F,t){this.keyboard=x;this.sound=F;this.display=t;this.cpu=new P(this.keyboard,this.sound,this.display);this.currentRom=null;this.freeze=false;this.interval=0;this.now=0;this.lastTime=0;this.elapsed=0}loadRomBufferInMemory(x){for(let F=0;F<x.length;F++){this.cpu.memory[X+F]=x[F]}}async fetchRom(x){this.currentRom=x;const F=await fetch(`roms/${x}.ch8`);const t=await F.arrayBuffer();this.loadRomBufferInMemory(new Uint8Array(t))}init(x){this.interval=1000/U;this.lastTime=Date.now();this.cpu.loadFontsetInMemory();this.fetchRom(x)}clear(){this.cpu.clearDisplay();this.cpu=new P(this.keyboard,this.sound,this.display)}onScaleChange(x){this.cpu.display.scale=x;this.cpu.display.pixelSize=x;this.cpu.display.canvas.width=E*x;this.cpu.display.canvas.height=h*x}run(){let x=Date.now();if(!this.lastTime){this.lastTime=x}let F=x-this.lastTime;appTimerInterval.innerText=Math.floor(this.interval)+"ms";appTimerElapsed.innerText=F+"ms";appTimerDelay.innerText=this.cpu.delayTimer;if(F>this.interval){this.lastTime=x;this.cpu.cycle()}requestAnimationFrame(this.run.bind(this))}}var R=document.getElementById("scale");var j=document.getElementById("roms");var W=document.getElementById("pauseElm");var N=new Y(C);var V=new m;var n=new J;var q=new Z(N,V,n);q.init("blitz");document.addEventListener("DOMContentLoaded",()=>{q.run()});R.addEventListener("change",(x)=>{q.onScaleChange(parseInt(x.target.value))});j.addEventListener("change",(x)=>{q.clear();q.init(x.target.value)});W.addEventListener("change",(x)=>{q.cpu.paused=x.target.checked;pauseElmLabel.innerText=q.cpu.paused?"PLAY":"PAUSE"});
